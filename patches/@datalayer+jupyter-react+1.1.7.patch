diff --git a/node_modules/@datalayer/jupyter-react/lib/jupyter/JupyterConfig.d.ts b/node_modules/@datalayer/jupyter-react/lib/jupyter/JupyterConfig.d.ts
index 1234567..abcdefg 100644
--- a/node_modules/@datalayer/jupyter-react/lib/jupyter/JupyterConfig.d.ts
+++ b/node_modules/@datalayer/jupyter-react/lib/jupyter/JupyterConfig.d.ts
@@ -25,6 +25,12 @@ export declare const setJupyterServerToken: (jupyterServerToken: string) => voi
  * Getter for jupyterServerToken.
  */
 export declare const getJupyterServerToken: () => string;
+/**
+ * Reset the Jupyter configuration.
+ * This is useful when reusing webviews or remounting the application
+ * to ensure stale configuration doesn't persist.
+ */
+export declare const resetJupyterConfig: () => void;
 /**
  * Method to load the Jupyter configuration from the host HTML page.
  */
diff --git a/node_modules/@datalayer/jupyter-react/lib/jupyter/JupyterConfig.js b/node_modules/@datalayer/jupyter-react/lib/jupyter/JupyterConfig.js
index 1234567..abcdefg 100644
--- a/node_modules/@datalayer/jupyter-react/lib/jupyter/JupyterConfig.js
+++ b/node_modules/@datalayer/jupyter-react/lib/jupyter/JupyterConfig.js
@@ -60,6 +60,14 @@ export const getJupyterServerToken = () => {
     }
     return config.jupyterServerToken;
 };
+/**
+ * Reset the Jupyter configuration.
+ * This is useful when reusing webviews or remounting the application
+ * to ensure stale configuration doesn't persist.
+ */
+export const resetJupyterConfig = () => {
+    config = undefined;
+};
 /**
  * Method to load the Jupyter configuration from the host HTML page.
  */
